<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
    <title>Version 0.9</title>
    <script type="text/javascript" src="/javascripts/prototype.js"></script>
    <script type="text/javascript" src="/javascripts/raphael-min.js"></script>
    <script type="text/javascript">
     var bookUri="";

      var iDay, cDay, thisYear, thisMonth, thisDay, daysInMonth, myDate;
      var day = new Array("K", "1", "2", "3", "4", "5", "6","7", "8", "9", "10", "11", "12","F","So","J","Se");

      var curricula = new Array("All","21rst Century","Reading", "Math", "Character");

      //var today = new Date();
      var curriculum_offset = 0;
      //setCalendar(today);

      /*
       Calendar cell array and properties GLOBAL Variables
       */
      var canvas_width = 1400;
      var canvas_height = 720;
      var left_col_width = 250;//weekdays

      //var calcells = new Array({name:'a',end:0,length:4},{name:'b',end:1,length:4},{name:'c',end:2,length:4});
      var calcells = new Array();

      var monthday = new Array();//days of month
      var calslct = new Array();//selectable area of days of month calandar cells
      var daycells = new Array();//weekdays

      //calcells[41];
      daycells[13];
      var calbgd = "#C0C0C0", offset_x = 5, offset_y = 40;
      //Sizes
      var calcell_x = 50;//width
      var calcell_y = 50;//height
      var calcell_r = 10;//rounded corner
      var calcell_bord = 5;
      var datesize = 12, monthsize = 30;
      var free = 0, selected = 1, busy = 2;
      //Colours
      var calcellbgd_default = "#FFFFFF";//white
      var calcellbgd_wkend = "#D3D3D3";//lightgray
      var calcellbgd_busy = "#FF0000";//red
      var calcellbgd_slct = "#FFD700";//gold
      var calcellbgd_hover = "#008000";//green
      var wkdaybgd = "#A9A9A9";//darkgray
      var wkdayfont = "#FFFFFF";//white
      //Adjust scale
      var calscale = 0.75;

      function init(){
        //Adjust to Scale
        calcell_x = calcell_x * calscale;
        calcell_y = calcell_y * calscale;
        calcell_r = calcell_r * calscale;
        datesize = datesize * calscale;
        monthsize = monthsize * calscale;
        offset_x = offset_x * calscale;
        offset_y = offset_y * calscale;
        canvas_width = canvas_width * calscale;
        canvas_height = canvas_height * calscale;
        // get the canvas div element
        var d = document.getElementById('canvas_container');
        // scale canvas width
        d.style.width = "" + canvas_width + "px";
      }

      function findDaysInMonth(month, year){
        return 32 - new Date(year, month, 32).getDate();
      }

      function setCalendar(){
        var nmonth;//month number
        nmonth = adate.getMonth();
        thisMonth = months[nmonth];
        thisYear = adate.getFullYear();
        iDay = adate.getDay();
        thisDay = day[iDay];
        daysInMonth = findDaysInMonth(nmonth, thisYear);
        myDate = adate;

        adate.setDate(1);
        cDay = adate.getDay();
        cDay = (cDay != 0) ? cDay - 2 : 5;
      }

      function changeCurriculum(paper, myDate, alter){
        //var nmonth;
        //nmonth = adate.getMonth();
        //nyear = adate.getFullYear();
        curriculum_offset = curriculum_offset + alter;
        if (curriculum_offset < 0) curriculum_offset = 0;
        if (curriculum_offset > 4) curriculum_offset = 4;
//console.log(curriculum_offset);
//console.log(alter);

        //adate.setFullYear(nyear, nmonth, 1);
        //setCalendar(adate);
        thisCurriculum = curricula[curriculum_offset];
        showCalendar(paper, offset_y, thisCurriculum);
      }

      function layoutCalendar(paper, offsety){
        /*
         Navigation buttons
         */
        var xob, xon, yo;// x,y origins of next and back buttons
        xob = 2 * offset_x * calscale;
        xon = 7 * calcell_x - offset_x;
        yo = offset_y - (30 * calscale);

        //Create Forward button
        var arrownext = paper.path("m 53.159616,167.25906 -17.377,-10.033 v 5.156 c 0,0 -3.83,0 -7.529,0 -3.7,0 -7.885,-4.855 -7.885,-4.855 0,0 1.141,11.418 5.326,13.32 4.188,1.902 10.087,1.293 10.087,1.293 v 5.154 l 17.378,-10.035 z").attr({
          fill: "#FFFFFF",
          cursor: "pointer"
        }).scale(calscale);
        var bBox = arrownext.getBBox();
        arrownext.translate(xon - bBox.x - bBox.width, yo - bBox.y);

        //Create Back button
        var arrowback = paper.path("m 20.368616,123.25906 17.377,-10.033 v 5.156 c 0,0 3.83,0 7.529,0 3.7,0 7.885,-4.855 7.885,-4.855 0,0 -1.141,11.418 -5.326,13.32 -4.188,1.902 -10.087,1.293 -10.087,1.293 v 5.154 l -17.378,-10.035 z").attr({
          fill: "#FFFFFF",//white
          cursor: "pointer"
        }).scale(calscale);
        var bBox = arrowback.getBBox();
        arrowback.translate(xob - bBox.x, yo - bBox.y);

        // Hover navigation buttons
        arrowback.hover(function(){
          this.animate({
            scale: [calscale * 1.2, calscale * 1.2],
            "fill": calcellbgd_hover
          }, 500, ">");
        }, function(){
          this.stop();//if moveout stop animation early
          this.scale(calscale, calscale).attr("fill", "#FFFFFF");
        });
        arrownext.hover(function(){
          this.animate({
            scale: [calscale * 1.2, calscale * 1.2],
            "fill": calcellbgd_hover
          }, 500, ">");
        }, function(){
          this.stop();//if moveout stop animation early
          this.scale(calscale, calscale).attr("fill", "#FFFFFF");
        });

        //onClick Navigation Buttons
        arrowback.click(function(){
          clearCalendar(paper);
          changeCurriculum(paper, myDate, -1);
        });
        arrownext.click(function(){
          clearCalendar(paper);
          changeCurriculum(paper, myDate, 1);
        });

        /*
         School Year header
         */
        columns=17;
        var ooffset_x = offset_x + left_col_width;
        for (var i = 0; i < columns; i++) {
          daycells[i] = paper.rect(ooffset_x + calcell_x * i, offsety, calcell_x, calcell_y);
          daycells[i].date = paper.text(ooffset_x + (i + 0.5) * calcell_x, offsety + 0.25 * calcell_y, day[i]);
          daycells[i].attr({
            "fill": wkdaybgd,
            "stroke": calbgd,
            "stroke-width": calcell_bord
          });
          daycells[i].date.attr({
            "font-size": datesize * .8,
            "fill": wkdayfont
          });
        }
        offsety = offsety + calcell_y / 2;
        /*
         Create Calendar Cell-Table
         */
        var r, c;
        for (var i = 0; i < item_count; i++) {
//console.log(i);
          //r = Math.floor(i / columns);//row index
          //c = i % columns;//column index

          r = i+1;
          c = calcells[i].end;
          l = calcells[i].length;
          var left_col = c - l + 1;
          if (left_col < 0 ) {
console.log(l);
console.log(left_col);
             l = eval(l) + eval(left_col);
console.log(l);
             left_col = 0;
          }

          var left = ooffset_x + (left_col * calcell_x);
          calcells[i].cell = paper.rect(left, r * calcell_y + offsety, calcell_x*l, calcell_y, calcell_r);
          calcells[i].index = i;
          calcells[i].col = c;

        }
        initCalstate();
      }

      //Initialise calendar state  - end or month change
      function initCalstate(){
        for (var i = 0; i < item_count; i++) {
        //for (var i in calcells) {
          var calcell = calcells[i];
          if (typeof calcell == 'undefined') next;
//console.log(i);
//console.log(typeof calcell);
//console.log(calcell);
          calcell.state = 'free';//initial state free, can be: free/selected/busy
          calcell.cell.attr({
            "stroke": calbgd,
            "stroke-width": calcell_bord
          });
          //switch (calcells[i].col) {
          //  case 5:
          //  case 6:
          //    calcells[i].attr({
          //      "fill": calcellbgd_wkend
          //    });
          //    break;
          //  default:
              calcell.cell.attr({
                "fill": calcellbgd_default
              });
              //calcells[i].rotate(0, true);
              calcells[i].cell.attr({
                "rotation": 0
              });
          //}
        }
      }

      function clearCalendar(){
        month.remove();
        for (var i in monthday) {
          monthday[i].remove();
        }
        for (var i in calslct) {
          calslct[i].remove();
        }
        initCalstate();
      }

      function showCalendar(paper, offsety, cmonth){

        month = paper.text(3.5 * calcell_x, offsety - monthsize / 1.5, cmonth + " ").attr("font-size", monthsize);
        offsety = offsety + calcell_y / 2;
        /*
         Fill Calendar Cell-Table
         */
        //Previous Month ....to do

        //This Curriculum
        for (var i = 0; i < item_count; i++) {
        //for (var i in calcells) {
          var bBox = calcells[i].cell.getBBox();
//console.log(i);

          calcells[i].state = 'free';

          //coli = i % columns;
          //monthday[i] = paper.text( bBox.x + 0.5 * calcell_x, bBox.y + 0.5 * calcell_y,  calcells[i].name );
          monthday[i] = paper.text( left_col_width/2 , bBox.y + 0.5 * calcell_y,  calcells[i].name );
          monthday[i].attr({
            "font-size": datesize
          });

          calslct[i] = paper.rect(bBox.x, bBox.y, bBox.width, bBox.height).attr({
            "stroke-opacity": "0",
            "fill": "#FFFFFF",
            "opacity": "0"
          });

          calslct[i].index = i;

              calslct[i].attr("cursor", "pointer");

              calslct[i].click(function(){
                calcellClick(this.index);
              });
              calslct[i].mouseover(function(){
                calcellMouseover(this.index);
              });
              calslct[i].mouseout(function(){
                calcellMouseout(this.index);
              });

        }

        //end for loop creating Calendar cell-table
        //Next month
        /*
         Set up Calendar busy states
         First determine the numeric value of the current month and year
         Fetch busy states from Google Calendar(s)
         */
       // for (var i in months) {
       //   if (months[i] == thisMonth) {
       //     var thisMonthN = i - 1 + 2;// '-'forces numerical data type
       //   }
       // }

        //var nextMonthN = (thisMonthN == 12) ? 1 : thisMonthN + 1;
        //var beginDate = "" + thisYear + "-" + thisMonthN + "-" + "01";
        //var endDate = (nextMonthN == 1) ? "" + thisYear - 1 + 2 + "-" + nextMonthN + "-" + "01" : "" + thisYear + "-" + nextMonthN + "-" + "01";

        //getCalEvents(teachUri, beginDate, endDate, calcells);

      }

      /*
       Mouse functions
       */
      function calcellClick(i){
console.log('click');
        switch (calcells[i].state) {
          case 'free':
            calcells[i].state = selected;
            calcells[i].cell.animate({
              rotation: "45"
            }, 1000, "elastic");
            calcells[i].cell.attr("fill", calcellbgd_slct)
            break;
          //case selected:
          //  calcells[i].state = free;
          //  calcells[i].animate({
          //    rotation: "0"
          //  }, 1000, "elastic");
          //  calcells[i].attr("fill", calcellbgd_default)
          default:
        }
      }

      function calcellMouseover(i){
//console.log("mo"+i+calcells[i].state);
        switch (calcells[i].state) {
          case 'free':
//console.log("mo"+i+calcells[i].state);
            calcells[i].cell.attr("fill", calcellbgd_hover);
            break;
          //case selected:
          //  calcells[i].attr("fill", calcellbgd_slct);
          //  break;
          //case busy:
          //  calcells[i].attr("fill", calcellbgd_busy);
          //  break;
          default:
        }
      }

      function calcellMouseout(i){
        switch (calcells[i].state) {
          case 'free':
            calcells[i].cell.attr("fill", calcellbgd_default);
            break;
          //case selected:
          //  calcells[i].attr("fill", calcellbgd_slct);
          // break;
          //case busy:
          //  calcells[i].attr("fill", calcellbgd_busy);
          //  break;
          default:
        }
      }

      var items;
      var item_count;
      function get_curriculum(){
        //var items = new Array();
        $$('#curriculum div.item div.name').each(function(item_name, index) {
          console.log(item_name.innerText);
          calcells.push({'name' : item_name.innerText,'end':1,'length':2})
        });
        $$('#curriculum div.item div.end').each(function(item_end, index) {
          calcells[index].end= item_end.innerText;
        });
        $$('#curriculum div.item div.length').each(function(item_length, index) {
          calcells[index].length= item_length.innerText;
        });
        //items.each( function(item, index) {
        //  if (item.end != -2) calcells.push(item)
        //});
        item_count = calcells.length;
      };

      //var items = $$('#curriculum div.item');
      window.onload = function(){
        init();
        //var items = $$('#curriculum div.item');
        var paper = new Raphael(document.getElementById('canvas_container'), canvas_width, canvas_height);
        get_curriculum();
        //$('#curriculum').hide();
        layoutCalendar(paper, offset_y);
        //showCalendar(paper, offset_y, curriculum_offset);
        changeCurriculum(paper, myDate, 0)
      }
    </script>

    <style type="text/css">
      #canvas_container {
          width: 360px;
          border: 10px solid #aaa;
          background: #C0C0C0;/*silver*/
      }
  .tagline {
      color:#CC3300;
      font-size: 11px;
      letter-spacing: 0.2em;
      line-height: 18px;
  }
  .broken {
      color: #F00;
  }
    </style>
  </head>
<body>
<%= yield %>
    <div id="canvas_container">
    </div>
    <p class="broken"><strong>Some Toolbars in Internet Explorer will stop this page from working, e.g ZoneAlarm Toolbar. Try hiding the toolbar!</strong></p>
<div class="tagline"><br />
    	Last modified: June 14 2011 22:48:40.    </div>

  </body>
</html>
